import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

group 'com.cgi.eoss.f-tep'
version '0.4.2'

// This pattern allows us to override the URLs from init.gradle or gradle.properties
ext.mavenCentralUrl = project.hasProperty('mavenCentralUrl') ? mavenCentralUrl : 'https://jcenter.bintray.com'
ext.npmUrl = project.hasProperty('npmUrl') ? npmUrl : 'https://registry.npmjs.org'
ext.gradlePluginPortalUrl = project.hasProperty('gradlePluginPortalUrl') ? gradlePluginPortalUrl : 'https://plugins.gradle.org/m2'

allprojects {
    buildscript {
        repositories {
            maven { url gradlePluginPortalUrl }
        }
    }

    repositories {
        maven { url mavenCentralUrl }
    }

    buildDir = 'target'

    plugins.withType(JavaPlugin) {
        sourceCompatibility = 1.8
    }

    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        dependencies {
            dependency 'ch.qos.logback:logback-classic:1.1.9'
            dependency 'commons-io:commons-io:2.5'
            dependency 'commons-net:commons-net:3.5'
            dependency 'com.fasterxml.jackson.core:jackson-databind:2.8.6'
            dependency 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.6'
            dependency 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.8.6'
            dependency 'com.github.docker-java:docker-java:3.0.0'
            dependency 'com.github.jasminb:jsonapi-converter:0.3'
            dependency 'com.google.code.findbugs:jsr305:3.0.1'
            dependency 'com.google.code.gson:gson:2.7'
            dependency 'com.google.guava:guava:21.0'
            dependency 'com.google.jimfs:jimfs:1.1'
            dependency 'com.google.protobuf:protoc:3.2.0'
            dependency 'com.querydsl:querydsl-apt:4.1.4'
            dependency 'com.querydsl:querydsl-jpa:4.1.4'
            dependency 'com.squareup.okhttp3:mockwebserver:3.6.0'
            dependency 'com.squareup.okhttp3:okhttp:3.6.0'
            dependency 'com.zaxxer:HikariCP:2.6.0'
            dependency 'info.cukes:cucumber-java8:1.2.5'
            dependency 'info.cukes:cucumber-junit:1.2.5'
            dependency 'io.grpc:grpc-netty:1.1.1'
            dependency 'io.grpc:grpc-protobuf:1.1.1'
            dependency 'io.grpc:grpc-stub:1.1.1'
            dependency 'io.grpc:protoc-gen-grpc-java:1.1.1'
            dependency 'io.springfox:springfox-data-rest:2.6.1'
            dependency 'io.springfox:springfox-swagger2:2.6.1'
            dependency 'io.springfox:springfox-swagger-ui:2.6.1'
            dependency 'javax.servlet:javax.servlet-api:3.1.0'
            dependency 'junit:junit:4.12'
            dependency 'org.apache.httpcomponents:httpclient:4.3.1'
            dependency 'org.aspectj:aspectjweaver:1.8.10'
            dependency 'org.awaitility:awaitility:2.0.0'
            dependency 'org.flywaydb:flyway-core:4.0.3'
            dependency 'org.freemarker:freemarker:2.3.25-incubating'
            dependency 'org.hamcrest:hamcrest-junit:2.0.0.0'
            dependency 'org.hibernate:hibernate-core:5.2.7.Final'
            dependency 'org.hibernate:hibernate-entitymanager:5.2.7.Final'
            dependency 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
            dependency 'org.hsqldb:hsqldb:2.3.4'
            dependency 'org.lognet:grpc-spring-boot-starter:1.0.0'
            dependency 'org.mockftpserver:MockFtpServer:2.7.1'
            dependency 'org.mockito:mockito-core:2.7.0'
            dependency 'org.postgresql:postgresql:9.4.1212'
            dependency 'org.projectlombok:lombok:1.16.12'
            dependency 'org.seleniumhq.selenium:selenium-java:3.0.1'
            dependency 'org.slf4j:jcl-over-slf4j:1.7.22'
            dependency 'org.slf4j:jul-to-slf4j:1.7.22'
            dependency 'org.slf4j:slf4j-api:1.7.22'
            dependency 'org.springframework:spring-context:4.3.6.RELEASE'
            dependency 'org.springframework:spring-orm:4.3.6.RELEASE'
            dependency 'org.springframework:spring-test:4.3.6.RELEASE'
            dependency 'org.springframework:spring-tx:4.3.6.RELEASE'
            dependency 'org.springframework.boot:spring-boot:1.5.1.RELEASE'
            dependency 'org.springframework.boot:spring-boot-autoconfigure:1.5.1.RELEASE'
            dependency 'org.springframework.boot:spring-boot-starter-actuator:1.5.1.RELEASE'
            dependency 'org.springframework.boot:spring-boot-starter-test:1.5.1.RELEASE'
            dependency 'org.springframework.boot:spring-boot-starter-undertow:1.5.1.RELEASE'
            dependency 'org.springframework.data:spring-data-jpa:1.11.0.RELEASE'
            dependency 'org.springframework.data:spring-data-rest-hal-browser:2.6.0.RELEASE'
            dependency 'org.springframework.data:spring-data-rest-webmvc:2.6.0.RELEASE'
            dependency 'org.springframework.security:spring-security-acl:4.2.1.RELEASE'
            dependency 'org.springframework.security:spring-security-config:4.2.1.RELEASE'
            dependency 'org.springframework.security:spring-security-core:4.2.1.RELEASE'
            dependency 'org.springframework.security:spring-security-web:4.2.1.RELEASE'
            dependency 'org.testcontainers:selenium:1.1.8'
            dependency 'org.testcontainers:testcontainers:1.1.8'
        }
    }
}

def depVersions = [
        // Build plugin versions
        clientDependenciesPlugin  : '1.3.2',
        dependencyManagementPlugin: '1.0.0.RELEASE',
        jsPlugin                  : '2.14.1',
        osPackagePlugin           : '4.3.0',
        protobufPlugin            : '0.8.0',
        shadowPlugin              : '1.2.4',
        springBootPlugin          : '1.5.1.RELEASE'
]

ext.pl = [
        clientDependencies  : 'gradle.plugin.com.craigburke.gradle:client-dependencies:' + depVersions.clientDependenciesPlugin,
        dependencyManagement: 'io.spring.gradle:dependency-management-plugin:' + depVersions.dependencyManagementPlugin,
        js                  : 'com.eriwen:gradle-js-plugin:' + depVersions.jsPlugin,
        osPackage           : 'com.netflix.nebula:gradle-ospackage-plugin:' + depVersions.osPackagePlugin,
        protobuf            : 'com.google.protobuf:protobuf-gradle-plugin:' + depVersions.protobufPlugin,
        shadow              : 'com.github.jengelman.gradle.plugins:shadow:' + depVersions.shadowPlugin,
        springBoot          : 'org.springframework.boot:spring-boot-gradle-plugin:' + depVersions.springBootPlugin
]

buildscript {
    repositories {
        maven {
            url project.hasProperty('gradlePluginPortalUrl') ? gradlePluginPortalUrl : 'https://plugins.gradle.org/m2'
        }
    }
    dependencies {
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE'
    }
}

apply plugin: 'org.sonarqube'
apply plugin: 'com.github.ben-manes.versions'

ext.snapshotRpmQualifier = System.getenv("BUILD_NUMBER") == null ? LocalDateTime.now().format(DateTimeFormatter.ofPattern('yyyyMMddHHmmss')) : System.getenv("BUILD_NUMBER")

def getRpmVersion(version) {
    return [
            version: version.endsWith('-SNAPSHOT') ? version.toString().split('-')[0] : version,
            release: version.endsWith('-SNAPSHOT') ? "SNAPSHOT${snapshotRpmQualifier}" : '1'
    ]
}
