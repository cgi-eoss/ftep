<?php

/**
 * Implements hook_entity_info().
 */
function ftep_service_entity_info() {
    $info = array (
        'ftep_service' => array (
            'label' => t ( 'Ftep Service' ),
            'base table' => 'ftep_service',
            'entity keys' => array (
                'id' => 'sid',
                'label' => 'name' 
            ),
            'entity class' => 'FtepServices',  // 'Entity',
            'controller class' => 'FtepServicesController',
            'access callback' => 'ftep_services_access_callback',
            'module' => 'ftep_service',
            'fieldable' => false,
            'admin ui' => array (
                'path' => 'admin/ftep/services',
                'file' => 'ftep_service.admin.inc',
                'type' => MENU_NORMAL_ITEM,
                'controller class' => 'FtepServiceUIController'
            ),
        )
    ) ;
    return $info;
}

/**
 * Implements hook_menu().
 */
function ftep_service_menu() {
    $items = array ();

    $items ['services'] = array (
            'title' => 'Services',
            'page callback' => 'ftep_service_services',
            'access arguments' => array (
                    'administer ftep_service entities'
            )
    );
    return $items;
}
function ftep_service_services() {
    $services = entity_load ( 'ftep_service', array ( 1, 2, 3) );
    // Listing entities
    $list = entity_view ( 'ftep_service', $services );

    $output = array ();
    if (! array_key_exists ( "ftep_service", $list )) {
        return $output;
    }
    foreach ( $list ['ftep_service'] as $service ) {
        $output [] = drupal_render ( $service );
    }
    return implode ( $output );
}
/**
 * Ftep Services access callback.
 */
function ftep_services_access_callback() {
	if (user_is_anonymous () && ! user_access ( 'administer ftep_services entities' )) {
		return FALSE;
	} else {
		return TRUE;
	}
}


/**
 * FtepServices  custom entity class.
 */
class FtepServices extends Entity {
	/**
	 * Override defaultUri().
	 */
	protected function defaultUri() {
		return array (
				'path' => 'services/' . $this->identifier ()
		);
	}
}
