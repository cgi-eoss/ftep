@import "variable";
@import "fonts";
html {
    font-size: 16px;
    @media screen and (min-width: 900px) {
        font-size: 18px;
    }
    @media screen and (min-width: 1200px) {
        font-size: 20px;
    }
}
.ftep {
    font-family: Roboto-Regular;
    height: calc(100% ~'-' @navbar-height);
    overflow: hidden;
    margin: 0px;
}
body {
    color: @text;
}
h2 {
    font-size: 2em;
}
h3 {
    font-size: 1.6em;
}
.wide {
    width: 100%;
}
.high {
    height: 100%;
}
.hidden {
    display: none;
}
pre {
    font-size: 0.8em;
}
.break-word {
    word-wrap: break-word;
}
.left {
    float: left;
}
.right {
    float: right;
}
.clear {
    float: none;
}
.row {
    margin: 0 !important;
}
.no-padding {
    padding: 0px;
}
.no-margin {
    margin: 0;
}
.pointer {
    cursor: pointer;
}
.selectable {
    cursor: pointer;
}
.error {
    background-color: @error !important;
}
.error-text {
    color: @error-text !important;
}
.warning {
    background-color: @warning !important;
}
.warning-text {
    color: @warning-text !important;
}
.warnings {
    .bg-trans(@bg-light);
    bottom: 20px;
    height: 50px;
    padding: 6px;
    position: absolute;
    width: 100%;
}
.alert {
    color: @alert;
}
.alert-text {
    color: @alert-text;
}
.success {
    background-color: @success !important;
}
.success-text {
    color: @success-text !important;
}
.paused {
    background-color: @paused !important;
}
.paused-text {
    color: @paused !important;
}
.disabled {
    background-color: @disabled !important;
}
.disabled-text {
    color: @disabled !important;
}
.animationIf.ng-enter, .animationIf.ng-leave {
  transition: opacity ease-in-out 0.3s;
}
.animationIf.ng-enter, .animationIf.ng-leave.ng-leave-active {
  opacity: 0;
}
.animationIf.ng-leave, .animationIf.ng-enter.ng-enter-active {
  opacity: 1;
}
[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
  display: none !important;
}
