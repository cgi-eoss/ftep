<?php

function ftep_install(){
	// Add the node type
	// node_types_rebuild();
	// _ftep_install_type_create();
	watchdog("Ftep Module", "Install module");

}
function ftep_uninstall(){
	watchdog("Ftep Module", "Uninstalling module and deleting fields");
}


// function ftep_job_uri($job){
//   return array(
//     'path' => 'job/' . $job->id,
//   );
// }
// function ftepjob_load($pid = NULL, $reset = FALSE){
//   $pids = (isset ($pid) ? array($pid) : array());
//   $ftepjob = ftepjob_load_multiple($pids, $reset);
//   return $ftepjob ? reset ($ftepjob) : FALSE;
// }
 
// function ftepjob_load_multiple($pids = array(), $conditions = array(), $reset = FALSE){
//   return entity_load('ftepjob', $pids, $conditions, $reset);
// }
// function ftepjob_menu(){
//   $items['admin/structure/ftepjob/manage'] = array(
//     'title' => 'ftepjob Admin',
//     'description' => 'Manage ftepjob structure',
//     'page callback' => 'ftepjob_info',
//     'access arguments' => array('administer ftepjobs'),
//   );
//   $items['ftepjob/%ftepjob'] = array(
//     'title callback' => 'ftepjob_page_title',
//     'title arguments' => array(1),
//     'page callback' => 'ftepjob_page_view',
//     'page arguments' => array(1),
//     'access arguments' => array('view ftepjobs'),
//     'type' => MENU_CALLBACK,
//   );
//   return $items;
// }
 
// function ftepjob_permission(){
//     return array(
//     'administer ftepjobs' =>  array(
//       'title' => t('Administer ftepjobs'),
//       'restrict access' => TRUE,
//     ),
//     'view postsits' => array(
//       'title' => t('View ftepjobs'),
//     )
//   );
// }
 
 
// function ftepjob_info() {
//   return ('Welcome to the administration page for your ftepjobs!');
// }
 
// function ftepjob_page_title($ftepjob){
//   return $ftepjob->pid;
// }
 
// function ftepjob_page_view($ftepjob, $view_mode = 'full'){
//   $ftepjob->content = array();
 
//   // Build fields content.
//   field_attach_prepare_view('ftepjob', array($ftepjob->pid => $ftepjob), $view_mode);
//   entity_prepare_view('ftepjob', array($ftepjob->pid => $ftepjob));
//   $ftepjob->content += field_attach_view('ftepjob', $ftepjob, $view_mode);
 
//   return $ftepjob->content;
// }
 
 
// function ftepjob_field_extra_fields() {
//   $return = array();
//   $return['ftepjob']['ftepjob'] = array(
//     'form' => array(
//       'note' => array(
//         'label' => t('Note'),
//         'description' => t('ftepjob Note'),
//       ),
//     ),
//   );
 
//   return $return;
// }











// function ftep_schema(){
//   $schema['ftep_job']=array( 
//     'description' => 'Stores information about jobs',
//     'fields' => array( 
//       'jid' => array( 
//         'type' => 'serial',
//         'unsigned' => TRUE,
//         'not null' => TRUE,
//         'description' => t("Primary key. A unique id for each job"),

//       ),
//       'input_data_basket'=>array(
//         'type'    => 'varchar',
//         'length'  => 128,
//         'not null'  => TRUE,
//         'description' => t("Each job has an input data basket"),
//       ),
//       'output_data_basket'=>array(
//         'type'    => 'varchar',
//         'length'  => 128,
//         'not null'  => TRUE,
//         'description' => t("Each job has an output data basket"),
//       ),
//     ),
//     'primary key' => array('jid'),
//     'indexes' => array( 
//       'input_data_basket_idx' =>array('input_data_basket'), 
//     ),
//   );
//   return $schema;
// }
























// /**
// * Creates the ftep content types
// function _ftep_install_type_create(){

//   // Create an additional node type.
//   $job_node_type = array(
//     'type' => 'ftep_job',
//     'name' => t('Job'),
//     'base' => 'node_content',
//     'description' => t('<em>jobs</em> have XXXXXXXXX. '),
//     'custom' => 1,
//     'modified' => 1,
//     'locked' => 0,
//   );

//   $job_node_type = node_type_set_defaults($job_node_type);
//   node_type_save($job_node_type);
//   node_add_body_field($job_node_type);
//   // Default to not promoted.
//   variable_set('node_options_ftep_job', array('status'));
//   // Use this default type for adding content to books.
//   variable_set('ftep_job_allowed_types', array('ftep_job'));
//   //variable_set('book_child_type', 'book');
// }
// */
// /**
//  * Implements hook_menu().
 
// function ftep_menu() {
//   $items = array();

//   $items['api/job'] = array(
//     'access arguments' => array('access content'),
//     'page callback'     => 'ftep_job_api',
//     'page arguments' => array(2),
//     'delivery callback' => 'drupal_json_output'
//   );
//   return $items;
// }

// function ftep_job_api($param) {
// 	file_put_contents('C:\server\www\output.txt', "HERE");
//   // If passed param is node id
//   if ($param && is_numeric($param)) {
//     $node = node_load($param);
//     return array(
//       'nid' => $param,
//       'uid' => $node->uid,
//       'title' => check_plain($node->title),
//       'body' => $node->body[LANGUAGE_NONE][0]['value'],
//     );
//   }
//   // If passed param is text value
//   elseif ($param && !is_numeric($param)) {
//     $nodes = db_query("SELECT nid, uid, title FROM {node} n JOIN {field_data_body} b ON n.nid = b.entity_id WHERE n.title LIKE :pattern ORDER BY n.created DESC LIMIT 5", array(':pattern' => '%' . db_like($param) . '%'))->fetchAll();
//     return $nodes;
//   }
//   // If there is no passed param
//   else {
//     $nodes = db_query("SELECT nid, uid, title FROM {node} n JOIN {field_data_body} b ON n.nid = b.entity_id ORDER BY n.created DESC LIMIT 10")->fetchAll();
//     return $nodes;
//   }
// }
// */









// /*
// function ftep_delete_annotation($type){
// 	$instance = field_info_instance('node', 'annotation', $type->type);
// 	if($instance){
// 		field_delete_instance($instance);
// 	}
// }
// */
