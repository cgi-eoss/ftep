group 'com.cgi.eoss.f-tep'
version '0.4.1'

apply plugin: 'java'
apply plugin: 'jacoco'

sourceSets {
    generated {
        java {
            srcDirs = ["target/generated/java"]
        }
        resources {
            srcDirs = []
        }
    }
    main {
        java {
            srcDirs += "target/generated/java"
        }
    }
}

configurations {
    querydslApt
}

dependencies {
    compileOnly 'org.projectlombok:lombok'

    querydslApt group: 'com.querydsl', name: 'querydsl-apt', classifier: 'hibernate'
    querydslApt 'org.hibernate:hibernate-core'

    compile 'com.github.jasminb:jsonapi-converter'
    compile 'com.google.guava:guava'
    compile 'com.querydsl:querydsl-jpa'
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api'
    compile 'com.fasterxml.jackson.core:jackson-databind'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-guava'

    testCompile 'junit:junit'
    testCompile 'org.hamcrest:hamcrest-junit'
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compileOnly + configurations.querydslApt
    options.compilerArgs = [
            '-proc:only',
            '-processor', 'com.querydsl.apt.hibernate.HibernateAnnotationProcessor'
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
}

sonarqube {
    properties {
        property "sonar.exclusions", "target/generated/**/*"
    }
}
